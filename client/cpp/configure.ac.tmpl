AC_INIT([krpc], [%VERSION%])
AC_SUBST([LT_RELEASE],[%VERSION%])
AM_INIT_AUTOMAKE
AC_CANONICAL_HOST
AC_CONFIG_MACRO_DIR(m4)
AC_PROG_CXX
AC_LANG([C++])
AX_CXX_COMPILE_STDCXX(11, noext, mandatory)
LT_INIT
AX_CHECK_ZLIB()
PKG_CHECK_MODULES([protobuf], [protobuf >= 3.3])
AC_CHECK_PROG(PROTOC,protoc,protoc,no)
AM_CONDITIONAL([HAVE_PROTOC], [test x$PROTOC = xprotoc])
AC_CHECK_PROG(CP,cp,cp)
AC_CHECK_PROG(RM,rm,rm -f)
AC_CHECK_PROG(MV,mv,mv)
AC_CHECK_PROG(MKDIR,mkdir,mkdir)
AC_CHECK_PROG(SED,sed,sed)
AC_DEFINE([ASIO_STANDALONE], [1], [Define ASIO standalone])
case $host in
  *-*-linux*)
    CXXFLAGS="$CXXFLAGS -pthread"
    LDFLAGS="$LDFLAGS -pthread"
    ;;
  *-*-solaris*)
    if test "$GXX" = yes; then
      CXXFLAGS="$CXXFLAGS -D_PTHREADS"
    else
      # We'll assume Sun's CC.
      CXXFLAGS="$CXXFLAGS -mt"
    fi
    LIBS="$LIBS -lsocket -lnsl -lpthread"
    ;;
  *-*-mingw32*)
    CXXFLAGS="$CXXFLAGS -mthreads"
    LDFLAGS="$LDFLAGS -mthreads"
    LIBS="$LIBS -lws2_32 -lmswsock"
    ;;
  *-pc-cygwin*)
    CXXFLAGS="$CXXFLAGS -D__USE_W32_SOCKETS -D_WIN32_WINNT=0x0501"
    LIBS="$LIBS -lws2_32 -lmswsock"
    ;;
  *-apple-darwin*)
    CXXFLAGS="$CXXFLAGS"
    LDFLAGS="$LDFLAGS"
    ;;
  *-*-freebsd*)
    CXXFLAGS="$CXXFLAGS -pthread"
    LDFLAGS="$LDFLAGS -pthread"
    ;;
  *-*-netbsd*)
    CXXFLAGS="$CXXFLAGS -pthread"
    LDFLAGS="$LDFLAGS -pthread"
    ;;
esac
AC_CHECK_HEADER(asio.hpp, , AC_MSG_ERROR([Couldn't find ASIO headers.]))
AC_CONFIG_FILES([Makefile include/Makefile src/Makefile])
AC_OUTPUT
